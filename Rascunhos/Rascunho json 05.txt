// Gabby Define o objeto "livros" que armazena informações sobre os livros da Bíblia
const livros = {
    "genesis": {
        "capitulos": 50
    },
    "exodo": {
        "capitulos": 40
    },
    // adicione os demais livros e capítulos
};

// Variáveis globais para o título, versículo ativo, livro ativo e capítulo ativo
let titulo = null;
let activeVersiculoButton = null;
let activeLivro = null;
let activeCapitulo = null;

// Função para criar os botões dos capítulos
function createCapitulosButtons(livro) {
    const capitulos = livros[livro].capitulos;
    const capitulosContainer = document.createElement('div');
    capitulosContainer.classList.add('capitulos');

    for (let i = 1; i <= capitulos; i++) {
        const button = document.createElement('button');
        button.textContent = `${i}`;
        button.classList.add('botao-capitulo');
        button.addEventListener('click', () => {
            toggleVersiculos(livro, i);
        });
        capitulosContainer.appendChild(button);
    }
    return capitulosContainer;
}

// Função para carregar o conteúdo de um versículo específico a partir de um arquivo JSON
async function loadVersiculo(livro, capitulo, versiculo) {
    try {
        const response = await fetch(`json/${livro}_original.json`);
        const data = await response.json();

        const versiculoContent = data[livro][capitulo]?.versiculos[versiculo - 1];
        const content = document.querySelector('.content');

        // Remove qualquer texto de versículo existente
        const existingVersiculo = content.querySelector('.versiculo-texto');
        if (existingVersiculo) {
            existingVersiculo.remove();
        }

        // Cria um novo elemento para exibir o versículo
        const versiculoElement = document.createElement('div');
        versiculoElement.classList.add('versiculo', 'versiculo-texto');
        versiculoElement.textContent = versiculoContent || 'Versículo não encontrado.';

        content.appendChild(versiculoElement);
        titulo.textContent = `${livro.toUpperCase()} - CAPÍTULO ${capitulo} - VERSÍCULO ${versiculo}`;
    } catch (error) {
        console.error("Erro ao carregar versículo:", error);
    }
}

// Função para abrir a janela de slide
function abrirJanelaSlide(livroAtual, capituloAtual, versiculoAtual) {
    if (window.janelaSlide && !window.janelaSlide.closed) {
        window.janelaSlide.focus();
        return;
    }

    const largura = window.screen.availWidth;
    const altura = window.screen.availHeight;

    window.janelaSlide = window.open('', 'JanelaSlide', `width=${largura},height=${altura}`);

    window.janelaSlide.document.open();
    window.janelaSlide.document.write(`
        <!DOCTYPE html>
        <html lang="pt-BR">
        <head>
            <title>Janela Slide</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
                body { font-family: sans-serif; background-color: #181818; color: white; display: flex; justify-content: center; align-items: center; height: 100vh; text-align: center; font-weight: bold; }
                .versiculo-texto { font-size: 5vw; }
                button { padding: 1rem 2rem; font-size: 1.5rem; margin-top: 2rem; }
            </style>
        </head>
        <body>
            <div id="titulo">${livroAtual.toUpperCase()} - CAPÍTULO ${capituloAtual} - VERSÍCULO ${versiculoAtual}</div>
            <div id="versiculo-container"><div class="versiculo-texto">Carregando...</div></div>
            <button onclick="window.close()">Fechar</button>
            <script>
                fetch('../json/${livroAtual}_original.json')
                    .then(response => response.json())
                    .then(data => {
                        const versiculoContent = data[livroAtual][capituloAtual]?.versiculos[versiculoAtual - 1];
                        document.querySelector('.versiculo-texto').innerText = versiculoContent || 'Versículo não encontrado.';
                    });
            </script>
        </body>
        </html>
    `);
    window.janelaSlide.document.close();
}

// Função para alternar o texto do versículo
function toggleVersiculoText(livro, capitulo, versiculo, button) {
    if (activeVersiculoButton === button) {
        const existingVersiculo = document.querySelector('.versiculo-texto');
        if (existingVersiculo) {
            existingVersiculo.remove();
        }
        activeVersiculoButton = null;
    } else {
        loadVersiculo(livro, capitulo, versiculo);
        activeVersiculoButton = button;
    }
}

// Função para configurar a seção de downloads
const downloads = [
    { texto: 'A Bíblia Católica', link: 'baixar/A_Biblia_Catolica.pdf' },
    { texto: 'A Bíblia Sagrada NVT', link: 'baixar/A_Biblia_Sagrada_NVT.pdf' },
    { texto: 'A Bíblia Viva', link: 'baixar/A_Biblia_Viva.pdf' },
    // adicione mais itens de download conforme necessário
];

const listaBaixar = document.getElementById('Baixar');
downloads.forEach(download => {
    const li = document.createElement('li');
    const a = document.createElement('a');
    a.href = download.link;
    a.innerHTML = download.texto;
    a.target = '_blank'; // Abre o link em uma nova janela
    li.appendChild(a);
    listaBaixar.appendChild(li);
});

// Adiciona eventos de clique aos links dos livros para abrir a janela de slide
document.querySelector('header nav ul li:first-child a').addEventListener('click', (event) => {
    event.preventDefault();
    abrirJanelaSlide(activeLivro, activeCapitulo, activeVersiculoButton ? activeVersiculoButton.textContent.trim() : 1);
});

Explicação dos Blocos Adicionais
Função abrirJanelaSlide: Esta função abre uma nova janela que exibe o conteúdo do versículo solicitado a partir do arquivo JSON, com um botão para fechar a janela.

Configuração dos Downloads: A lista downloads armazena informações de cada arquivo de download. Para cada item, é criado um link <a> e um item de lista <li>, que são adicionados ao elemento com o ID Baixar.

Evento para Abrir a Janela de Slide: O evento de clique no link para abrir a janela de slide está incluído para facilitar a navegação entre versículos na nova janela.

Essas adições completam a funcionalidade para abrir a janela de visualização dos versículos e para baixar os arquivos, conforme solicitado.