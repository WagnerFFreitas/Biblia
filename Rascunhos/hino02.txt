Aqui está um exemplo de código HTML, CSS e JavaScript para criar uma página web com as características que você descreveu: ### HTML (`index.html`) ```html <!DOCTYPE html> <html lang="pt-BR"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Harpa Cristã</title> <link rel="stylesheet" href="styles.css"> </head> <body> <div class="container"> <h1 class="titulo">Harpa Cristã</h1> <div class="lista-hinos"> <ul id="hino-lista"></ul> </div> <div class="hino-selecionado" id="hino-selecionado"></div> <button id="abrir-janela">Abrir Hino</button> </div> <script src="script.js"></script> </body> </html> ``` ### CSS (`styles.css`) ```css body { font-family: Arial, sans-serif; margin: 0; padding: 0; display: flex; justify-content: center; align-items: flex-start; height: 100vh; background-color: #f4f4f4; } .container { width: 80%; } .titulo { text-align: left; color: #333; } .lista-hinos { margin-top: 20px; float: left; width: 30%; } .lista-hinos ul { list-style-type: none; padding: 0; } .lista-hinos li { padding: 5px; cursor: pointer; background-color: #e2e2e2; margin-bottom: 5px; } .lista-hinos li:hover { background-color: #d1d1d1; } .hino-selecionado { margin-top: 20px; padding: 20px; background-color: #fff; border: 1px solid #ccc; min-height: 150px; } button { margin-top: 20px; padding: 10px 15px; } ``` ### JavaScript (`script.js`) ```javascript const hinos = [ { numero: 1, nome: "Hino 1", estrofe1: "Estrofe 1 do Hino 1", estrofe2: "Estrofe 2 do Hino 1" }, { numero: 2, nome: "Hino 2", estrofe1: "Estrofe 1 do Hino 2", estrofe2: "Estrofe 2 do Hino 2" }, // Adicione mais hinos conforme necessário... ]; const hinoLista = document.getElementById('hino-lista'); const hinoSelecionado = document.getElementById('hino-selecionado'); const abrirJanelaBtn = document.getElementById('abrir-janela'); hinos.forEach(hino => { const li = document.createElement('li'); li.textContent = hino.nome; li.onclick = () => selecionarHino(hino); hinoLista.appendChild(li); }); function selecionarHino(hino) { hinoSelecionado.innerHTML = `<h2>${hino.nome}</h2><p>${hino.estrofe1}</p><p>${hino.estrofe2}</p>`; abrirJanelaBtn.onclick = () => abrirJanela(hino); } function abrirJanela(hino) { const novaJanela = window.open('', '', 'width=800,height=600'); novaJanela.document.write(` <html> <head> <title>${hino.nome}</title> <style> body { background-image: url('caminho/para/imagem/harpa.png'); background-size: cover; color: white; text-align: center; } </style> </head> <body> <h1>${hino.nome}</h1> <p>${hino.estrofe1}</p> <p>${hino.estrofe2}</p> <button id="voltar">VOLTA</button> <button id="seguinte">SEGUINTE</button> <script> let currentEstrofe = 0; const estrofes = [ "${hino.estrofe1}", "${hino.estrofe2}" ]; // Adicione mais se necessário. document.getElementById('voltar').onclick = () => { if (currentEstrofe > 0) { currentEstrofe--; document.body.innerHTML = '<h1>' + estrofes[currentEstrofe] + '</h1>'; // Atualizar conteúdo } }; document.getElementById('seguinte').onclick = () => { if (currentEstrofe < estrofes.length - 1) { currentEstrofe++; document.body.innerHTML = '<h1>' + estrofes[currentEstrofe] + '</h1>'; // Atualizar conteúdo } }; </script> </body> </html> `); novaJanela.document.close(); } ``` ### Observações: 1. **Imagem de Fundo:** Substitua `'caminho/para/imagem/harpa.png'` pelo caminho correto da imagem de fundo que você deseja usar na nova janela. 2. **Extensibilidade:** Você pode adicionar mais hinos ao array no arquivo `script.js` conforme necessário. 3. **Ajustes:** Certifique-se de que a organização das estrofes esteja correta se você adicionar mais estrofes. Com esses arquivos, você deve ter uma página web funcional que atende às suas especificações!


-------------------

Claro! Vamos realizar algumas melhorias no código, tanto na estrutura funcional quanto na parte de design. Vamos adotar um design mais moderno e responsivo, utilizando flexbox para melhor layout. Além disso, vamos melhorar a interação com JavaScript. Aqui estão as atualizações: ### HTML (`index.html`) ```html <!DOCTYPE html> <html lang="pt-BR"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Harpa Cristã</title> <link rel="stylesheet" href="styles.css"> </head> <body> <div class="container"> <h1 class="titulo">Harpa Cristã</h1> <div class="conteudo"> <div class="lista-hinos"> <h2>Hinos</h2> <ul id="hino-lista"></ul> </div> <div class="hino-selecionado" id="hino-selecionado">Selecione um hino para ver os detalhes.</div> </div> <button id="abrir-janela" disabled>Abrir Hino</button> </div> <script src="script.js"></script> </body> </html> ``` ### CSS (`styles.css`) ```css body { font-family: 'Arial', sans-serif; margin: 0; padding: 0; background-color: #f4f4f4; } .container { width: 90%; max-width: 800px; margin: 20px auto; padding: 20px; background-color: #fff; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); border-radius: 8px; } .titulo { text-align: center; color: #333; } .conteudo { display: flex; justify-content: space-between; } .lista-hinos { width: 30%; margin-right: 20px; } .lista-hinos h2 { text-align: center; color: #007BFF; } .lista-hinos ul { list-style-type: none; padding: 0; } .lista-hinos li { padding: 10px; margin-bottom: 5px; background-color: #e2e2e2; border-radius: 5px; cursor: pointer; transition: background-color 0.3s; } .lista-hinos li:hover { background-color: #d1d1d1; } .hino-selecionado { flex-grow: 1; margin-top: 0; padding: 20px; background-color: #f8f8f8; border: 1px solid #ccc; min-height: 150px; border-radius: 5px; } button { margin-top: 20px; padding: 12px 15px; background-color: #007BFF; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; transition: background-color 0.3s; display: block; width: 100%; } button:disabled { background-color: #ccc; cursor: not-allowed; } button:hover:not(:disabled) { background-color: #0056b3; } ``` ### JavaScript (`script.js`) ```javascript const hinos = [ { numero: 1, nome: "Hino 1", estrofe1: "Estrofe 1 do Hino 1", estrofe2: "Estrofe 2 do Hino 1" }, { numero: 2, nome: "Hino 2", estrofe1: "Estrofe 1 do Hino 2", estrofe2: "Estrofe 2 do Hino 2" }, // Adicione mais hinos conforme necessário... ]; const hinoLista = document.getElementById('hino-lista'); const hinoSelecionado = document.getElementById('hino-selecionado'); const abrirJanelaBtn = document.getElementById('abrir-janela'); hinos.forEach(hino => { const li = document.createElement('li'); li.textContent = hino.nome; li.onclick = () => selecionarHino(hino); hinoLista.appendChild(li); }); function selecionarHino(hino) { hinoSelecionado.innerHTML = `<h2>${hino.nome}</h2><p>${hino.estrofe1}</p><p>${hino.estrofe2}</p>`; abrirJanelaBtn.disabled = false; // Habilita o botão apenas após selecionar um hino abrirJanelaBtn.onclick = () => abrirJanela(hino); } function abrirJanela(hino) { const novaJanela = window.open('', '', 'width=800,height=600'); novaJanela.document.write(` <html> <head> <title>${hino.nome}</title> <style> body { background-image: url('caminho/para/imagem/harpa.png'); background-size: cover; color: white; text-align: center; font-family: 'Arial', sans-serif; } button { margin-top: 20px; padding: 10px 15px; background-color: #007BFF; color: white; border: none; border-radius: 5px; cursor: pointer; } </style> </head> <body> <h1>${hino.nome}</h1> <p>${hino.estrofe1}</p> <p>${hino.estrofe2}</p> <button id="voltar">VOLTA</button> <button id="seguinte">SEGUINTE</button> <script> let currentEstrofe = 0; const estrofes = [ "${hino.estrofe1}", "${hino.estrofe2}" ]; // Adicione mais se necessário. mostrarEstrofe(); document.getElementById('voltar').onclick = () => { if (currentEstrofe > 0) { currentEstrofe--; mostrarEstrofe(); } }; document.getElementById('seguinte').onclick = () => { if (currentEstrofe < estrofes.length - 1) { currentEstrofe++; mostrarEstrofe(); } }; function mostrarEstrofe() { document.body.innerHTML = '<h1>' + estrofes[currentEstrofe] + '</h1><button id="voltar">VOLTA</button><button id="seguinte">SEGUINTE</button>'; document.getElementById('voltar').onclick = voltar; document.getElementById('seguinte').onclick = seguinte; } </script> </body> </html> `); novaJanela.document.close(); } ``` ### Melhorias Implementadas: 1. **Design Moderno:** O uso de box shadow, bordas arredondadas e cores mais amigáveis cria uma interface mais moderna e agradável. 2. **Responsividade:** O layout foi ajustado para ser mais flexível, utilizando `flexbox` para alinhar a lista de hinos e a seção de hino selecionado. 3. **Interatividade do Botão:** O botão "Abrir Hino" só se torna habilitado após a seleção de um hino, evitando confusões. 4. **Melhora na Navegação em Janela:** Ao navegar entre as estrofes na janela nova, a interface é atualizada dinamicamente, sem perder o estilo. Essas alterações tornam a aplicação mais amigável e esteticamente agradável para os usuários. Não se esqueça de substituir o caminho da imagem de fundo na nova janela pelo que você deseja usar. Com essas implementações, você terá uma experiência de usuário muito melhor!